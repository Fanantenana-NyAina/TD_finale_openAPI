openapi: 3.0.3
info:
  title: STD23044 - TDFinale
  version: 1.0.0

servers:
  - url: https://localhost.STD23044.com

paths:
  /competitions:
    get:
      summary: Retrieve a list of competitions
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: true
          description: Page number for pagination
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
          required: true
          description: Number of items per page
        - in: query
          name: countryOrContinent
          schema:
            type: string
          description: Filter competitions by country or continent
      responses:
        '200':
          description: A list of competitions
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    format: int32
                  pageSize:
                    type: integer
                    format: int32
                  total:
                    type: integer
                    format: int32
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Competition'

    post:
      summary: Create a new competition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompetition'
        required: true
      responses:
        '201':
          description: Competition created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Competition'

  /teams:
    get:
      summary: Retrieve a list of teams
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: true
          description: Page number for pagination
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
          required: true
          description: Number of items per page
        - in: query
          name: teamName
          schema:
            type: string
          description: Filter teams by team name
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    format: int32
                  pageSize:
                    type: integer
                    format: int32
                  total:
                    type: integer
                    format: int32
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'

    post:
      summary: Create a new team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTeam'
        required: true
      responses:
        '201':
          description: Team created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'

  /teams/{teamId}/players:
    get:
      summary: Retrieve a list of players for a specific team
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
          description: ID of the team
        - in: query
          name: page
          schema:
            type: integer
            format: int32
          required: true
          description: Page number for pagination
        - in: query
          name: pageSize
          schema:
            type: integer
            format: int32
          required: true
          description: Number of items per page
        - in: query
          name: playerName
          schema:
            type: string
          description: Filter players by player name
      responses:
        '200':
          description: A list of players for the team
          content:
            application/json:
              schema:
                type: object
                properties:
                  page:
                    type: integer
                    format: int32
                  pageSize:
                    type: integer
                    format: int32
                  total:
                    type: integer
                    format: int32
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Player'

    post:
      summary: Associate players with a team
      parameters:
        - in: path
          name: teamId
          schema:
            type: string
          required: true
          description: ID of the team
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playerIds:
                  type: array
                  items:
                    type: string
              required:
                - playerIds
        required: true
      responses:
        '200':
          description: Players associated with the team

components:
  schemas:
    Competition:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        countryOrContinent:
          type: string
    NewCompetition:
      type: object
      properties:
        name:
          type: string
        countryOrContinent:
          type: string
      required:
        - name
        - countryOrContinent
    Team:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        slogan:
          type: string
        competitions:
          type: array
          items:
            type: string
        players:
          type: array
          items:
            type: string
    NewTeam:
      type: object
      properties:
        name:
          type: string
        slogan:
          type: string
      required:
        - name
        - slogan
    Player:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        number:
          type: integer
          format: int32
        dominantFoot:
          type: string
          enum:
            - Left
            - Right
    NewPlayer:
      type: object
      properties:
        name:
          type: string
        number:
          type: integer
          format: int32
        dominantFoot:
          type: string
          enum:
            - Left
            - Right
      required:
        - name
        - number
        - dominantFoot
